print(a)
a = 3:10
print(a)
require(ggplot2)
ggplot(data=dfr, mapping=aes(x=id, y=value)) +
geom_line(mapping=aes(colour=group)) +
geom_hline(yintercept=c(-1,1)*qnorm(0.95), color="orange") +
geom_hline(yintercept=c(-1,1)*qnorm(0.99), color="darkred") +
scale_color_discrete(name = "指標", labels = c("董監事", "一般員工") )
set.seed(456)
n <- 20
dfr <- data.frame(
id=rep(1:n, 2),
group=rep(c("1","2"), each=n), value=c(rnorm(n), rnorm(n, sd=1.1))
)
require(ggplot2)
ggplot(data=dfr, mapping=aes(x=id, y=value)) +
geom_line(mapping=aes(colour=group)) +
geom_hline(yintercept=c(-1,1)*qnorm(0.95), color="orange") +
geom_hline(yintercept=c(-1,1)*qnorm(0.99), color="darkred") +
scale_color_discrete(name = "指標", labels = c("董監事", "一般員工") )
set.seed(456)
n <- 20
dfr <- data.frame(
id=rep(1:n, 2),
group=rep(c("1","2"), each=n), value=c(rnorm(n), rnorm(n, sd=1.1))
)
require(ggplot2)
ggplot(data=dfr, mapping=aes(x=id, y=value)) +
geom_line(mapping=aes(colour=group)) +
geom_hline(yintercept=c(-1,1)*qnorm(0.95), color="orange") +
geom_hline(yintercept=c(-1,1)*qnorm(0.99), color="darkred") +
scale_color_discrete(name = "Title", labels = c("1111", "2222") )
setwd("~/Downloads/Q-learning-Gridworld-master")
# Load connectivity matrix
csv <- read.csv("0_1", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv[,2:14]),  col = cols2, zlim=c(-1, 1))
# Load connectivity matrix
csv <- read.csv("0_1", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv[,2:14]),  col = cols2, zlim=c(-1, 1))
# Load connectivity matrix
csv <- read.csv("0_1.csv", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv[,2:14]),  col = cols2, zlim=c(-1, 1))
# Load connectivity matrix
csv <- read.csv("0_1.csv", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv[,2:13]),  col = cols2, zlim=c(-1, 1))
# Load connectivity matrix
csv <- read.csv("0_1.csv", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv[,]),  col = cols2, zlim=c(-1, 1))
View(csv)
# Load connectivity matrix
csv <- read.csv("1_2.csv", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv[,]),  col = cols2, zlim=c(-1, 1))
# Load connectivity matrix
csv <- read.csv("1_2.csv", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv[,]),  col = cols2, zlim=c(-1, 1))
# Load connectivity matrix
csv <- read.csv("1_2.csv", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv),  col = cols2)
View(csv)
View(csv)
# Load connectivity matrix
csv <- read.csv("1_2.csv", header=F)
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(as.matrix(csv[,]),  col = cols2, zlim=c(-1, 1))
library(lattice)
heatmap(as.matrix(csv[,2:14]), Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
library(lattice)
heatmap(as.matrix(csv[,]), Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
y matrix
csv <- read.csv("1_2.csv", header=F)
data = t(as.matrix(csv[,]))
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(data,  col = cols2, zlim=c(-1, 1))
ivity matrix
csv <- read.csv("1_2.csv", header=F)
data = transpose(as.matrix(csv[,]))
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(data,  col = cols2, zlim=c(-1, 1))
# Load connectivity matrix
csv <- read.csv("1_2.csv", header=F)
data = t(as.matrix(csv))
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(data,  col = cols2, zlim=c(-1, 1))
View(data)
library(lattice)
heatmap(as.matrix(csv[,]), Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
heatmap(data, Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
View(data)
levelplot(data, at=seq(-.5, .5, .01), col.regions=cols2)
library(reshape2)
library(ggplot2)
csv.m <- melt(csv, id.vars="V1")
csv.m$V1 <- factor(csv.m$V1, levels=unique(as.character(csv.m$V1)) )
qplot(x=variable, y=V1, data=csv.m, fill=value, geom="tile") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_gradient2(low = "blue", mid = "white", high = "red")
View(csv)
library(reshape2)
library(ggplot2)
csv.m <- melt(csv, id.vars="V1")
# csv.m$V1 <- factor(csv.m$V1, levels=unique(as.character(csv.m$V1)) )
qplot(x=variable, y=V1, data=csv.m, fill=value, geom="tile") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_gradient2(low = "blue", mid = "white", high = "red")
View(csv.m)
csv.m <- melt(csv)
View(csv.m)
csv.m <- melt(csv, id.vars="V1")
csv.m$V1 <- factor(csv.m$V1, levels=unique(as.character(csv.m$V1)) )
qplot(x=variable, y=V1, data=csv.m, fill=value, geom="tile") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_gradient2(low = "blue", mid = "white", high = "red")
? melt
colnames(data)
rownames(data)
rownames(data) = 1:12
rownames(data)
colnames(data)
colnames(data) = 1:7
colnames(data)
colnames(data)
View(data)
total <- rbind(data, [1:12])
total <- rbind(data,[1:12)
total <- rbind(data, 1:12)
total <- rbind(data, 1:7)
View(total)
x = data.frame(
id   = c(1, 1, 2, 2),
blue = c(1, 0, 1, 0),
red  = c(0, 1, 0, 1)
)
# collapse the data frame
melt(data = x, id.vars = "id", measure.vars = c("blue", "red"))
View(x)
View(data)
authors <- data.frame(
## I(*) : use character columns of names to get sensible sort order
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
authorN <- within(authors, { name <- surname; rm(surname) })
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m0 <- merge(authorN, books))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
m2 <- merge(books, authors, by.x = "name", by.y = "surname")
stopifnot(exprs = {
identical(m0, m2[, names(m0)])
as.character(m1[, 1]) == as.character(m2[, 1])
all.equal(m1[, -1], m2[, -1][ names(m1)[-1] ])
identical(dim(merge(m1, m2, by = NULL)),
c(nrow(m1)*nrow(m2), ncol(m1)+ncol(m2)))
})
View(books)
View(authors)
View(m2)
csv.m <- melt(data, id = rolnames(data))
View(csv.m)
csv <- read.csv("1_2.csv", header=F)
data = t(as.matrix(csv))
# row y, col x
rownames(data) = 1:12
colnames(data) = 1:7
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
image(data,  col = cols2, zlim=c(-1, 1))
library(lattice)
heatmap(data, Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
levelplot(data, at=seq(-.5, .5, .01), col.regions=cols2)
library(reshape2)
library(ggplot2)
mmm
mmm <- melt(data, id = rolnames(data))
View(mmm)
View(data)
qplot(x=variable, y=V1, data=melted_data, fill=value, geom="tile") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_gradient2(low = "blue", mid = "white", high = "red")
melted_data <- melt(data, id = rolnames(data))
qplot(x=variable, y=V1, data=melted_data, fill=value, geom="tile") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_gradient2(low = "blue", mid = "white", high = "red")
View(melted_data)
qplot(x=Var1, y=Var2, data=melted_data, fill=value, geom="tile") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_fill_gradient2(low = "blue", mid = "white", high = "red")
levelplot(data, at=seq(-.5, .5, .01), col.regions=cols2)
heatmap(data, Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
read_q <- function(filename){
# Load connectivity matrix
csv <- read.csv(filename, header=F)
data = t(as.matrix(csv))
# row y, col x
rownames(data) = 1:12
colnames(data) = 1:7
}
read_q <- function(filename){
# Load connectivity matrix
csv <- read.csv(filename, header=F)
data = t(as.matrix(csv))
# row y, col x
rownames(data) = 1:12
colnames(data) = 1:7
return(data)
}
data.1.2 = read_q("1_2.csv")
View(data.1.2)
read_q <- function(filename){
# Load connectivity matrix
csv <- read.csv(filename, header=F)
data = t(as.matrix(csv))
# row y, col x
rownames(data) = 1:12
colnames(data) = 1:7
return(data)}
plot_grid <- function(data){
library(reshape2)
library(ggplot2)
melted_data <- melt(data, id = rolnames(data))
# csv.m$V1 <- factor(csv.m$V1, levels=unique(as.character(csv.m$V1)) )
qplot(x=Var1, y=Var2, data=melted_data, fill=value, geom="tile") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_gradient2(low = "blue", mid = "white", high = "red")}
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
# cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
# image(data,  col = cols2, zlim=c(-1, 1))
# library(lattice)
# heatmap(data, Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
# levelplot(data, at=seq(-.5, .5, .01), col.regions=cols2)
data.0.1 = read_q("0_1.csv")
data.0.2 = read_q("0_2.csv")
data.1.2 = read_q("1_2.csv")
read_q <- function(filename){
# Load connectivity matrix
csv <- read.csv(filename, header=F)
data = t(as.matrix(csv))
# row y, col x
rownames(data) = 1:12
colnames(data) = 1:7
return(data)}
plot_grid <- function(data){
library(reshape2)
library(ggplot2)
melted_data <- melt(data, id = rolnames(data))
# csv.m$V1 <- factor(csv.m$V1, levels=unique(as.character(csv.m$V1)) )
qplot(x=Var1, y=Var2, data=melted_data, fill=value, geom="tile") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_gradient2(low = "blue", mid = "white", high = "red")}
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
# cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
# image(data,  col = cols2, zlim=c(-1, 1))
# library(lattice)
# heatmap(data, Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
# levelplot(data, at=seq(-.5, .5, .01), col.regions=cols2)
data.0.1 = read_q("0_1.csv")
data.0.2 = read_q("0_2.csv")
data.1.2 = read_q("1_2.csv")
plot_grid(data.0.1)
plot_grid(data.0.2)
plot_grid(data.1.2)
read_q <- function(filename){
# Load connectivity matrix
csv <- read.csv(filename, header=F)
data = t(as.matrix(csv))
# row y, col x
rownames(data) = 1:12
colnames(data) = 1:7
return(data)}
plot_grid <- function(data){
library(reshape2)
library(ggplot2)
melted_data <- melt(data, id = rolnames(data))
# csv.m$V1 <- factor(csv.m$V1, levels=unique(as.character(csv.m$V1)) )
qplot(x=Var1, y=Var2, data=melted_data, fill=value, geom="tile") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_gradient2(low = "blue", mid = "white", high = "red")}
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
# cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
# image(data,  col = cols2, zlim=c(-1, 1))
# library(lattice)
# heatmap(data, Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
# levelplot(data, at=seq(-.5, .5, .01), col.regions=cols2)
data.0.1 = read_q("0_1.csv")
data.0.2 = read_q("0_2.csv")
data.1.2 = read_q("1_2.csv")
plot_grid(data.0.1)
plot_grid(data.0.2)
plot_grid(data.1.2)
read_q <- function(filename){
# Load connectivity matrix
csv <- read.csv(filename, header=F)
data = t(as.matrix(csv))
# row y, col x
rownames(data) = 1:12
colnames(data) = 1:7
return(data)}
plot_grid <- function(data){
library(reshape2)
library(ggplot2)
melted_data <- melt(data, id = rolnames(data))
# csv.m$V1 <- factor(csv.m$V1, levels=unique(as.character(csv.m$V1)) )
qplot(x=Var1, y=Var2, data=melted_data, fill=value, geom="tile") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_gradient2(low = "blue", mid = "white", high = "red")}
# Set a gradient of colors that we will use for as many of the plots as possible
# The gradient goes from blue (negative correlations) to white (0) to red (positive correlations)
# cols2 <- colorRampPalette(c("blue","white","red"))(256)
# Notice how we are only using columns 2 through 14 for the plot.
# The first column contains the region labels
# image(data,  col = cols2, zlim=c(-1, 1))
# library(lattice)
# heatmap(data, Rowv=NA, Colv=NA, col = cols2, zlim=c(-1, 1))
# levelplot(data, at=seq(-.5, .5, .01), col.regions=cols2)
data.0.1 = read_q("0_1.csv")
data.0.2 = read_q("0_2.csv")
data.1.2 = read_q("1_2.csv")
plot_grid(data.0.1)
plot_grid(data.0.2)
plot_grid(data.1.2)
View(data.0.2)
View(data.0.1)
View(data.0.2)
View(data.0.1)
View(data.0.2)
View(data.0.1)
View(data.0.2)
View(data.0.1)
View(data.0.2)
View(data.1.2)
View(data.0.1)
View(data.0.2)
View(data.0.1)
View(data.0.2)
View(data.0.1)
View(data.1.2)
View(data.0.1)
View(data.0.2)
View(data.1.2)
View(data.0.2)
View(data.0.1)
plot_grid(data.0.1)
plot_grid(data.0.2)
plot_grid(data.1.2)
plot_grid(data.0.1)
plot_grid(data.0.2)
plot_grid(data.1.2)
plot_grid(data.0.1)
plot_grid(data.0.2)
plot_grid(data.1.2)
plot_grid(data.0.1)
plot_grid(data.1.2)
plot_grid(data.0.1)
plot_grid(data.0.2)
plot_grid(data.1.2)
plot_grid(data.0.1)
plot_grid(data.1.2)
plot_grid(data.1.2)
plot_grid(data.0.2)
total = data.0.1 + data.0.2
plot_grid(totla)
plot_grid(total)
